Grammar

    0 $accept: S1 $end

    1 S1: S1 S
    2   | S

    3 S: AS ';'
    4  | IFS
    5  | IFES
    6  | WS
    7  | DWS
    8  | FORS
    9  | SS

   10 SS: SWITCH '(' E ')' '{' CV '}'

   11 CV: CASE E ':' S1 BREAK ';'
   12   | CASE E ':' S1 BREAK ';' CV
   13   | CASE E ':' S1 BREAK ';' DEFAULT ':' S1

   14 AS: id '=' E

   15 E: E '+' E
   16  | E '-' E
   17  | E '*' E
   18  | E '/' E
   19  | E '^' E
   20  | '-' E
   21  | id
   22  | NUM

   23 IFS: IF '(' BE ')' '{' S1 '}'

   24 BE: BE OR BE
   25   | BE AND BE
   26   | NOT BE
   27   | id relop id
   28   | TRUE
   29   | FALSE

   30 IFES: IF '(' BE ')' '{' S1 '}' ELSE '{' S1 '}'

   31 WS: WHILE '(' BE ')' '{' S1 '}'

   32 DWS: DO '{' S1 '}' WHILE '(' BE ')' ';'

   33 FORS: FOR '(' IS ';' BE ';' MS ')' '{' S1 '}'

   34 IS: AS
   35   | IS ',' AS

   36 MS: IS
   37   | id INC
   38   | INC id
   39   | id DEC
   40   | DEC id


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 23 30 31 32 33
    ')' (41) 10 23 30 31 32 33
    '*' (42) 17
    '+' (43) 15
    ',' (44) 35
    '-' (45) 16 20
    '/' (47) 18
    ':' (58) 11 12 13
    ';' (59) 3 11 12 13 32 33
    '=' (61) 14
    '^' (94) 19
    '{' (123) 10 23 30 31 32 33
    '}' (125) 10 23 30 31 32 33
    error (256)
    id (258) 14 21 27 37 38 39 40
    NUM (259) 22
    OR (260) 24
    AND (261) 25
    NOT (262) 26
    relop (263) 27
    TRUE (264) 28
    FALSE (265) 29
    INC (266) 37 38
    DEC (267) 39 40
    IF (268) 23 30
    ELSE (269) 30
    DO (270) 32
    WHILE (271) 31 32
    uminus (272)
    FOR (273) 33
    SWITCH (274) 10
    CASE (275) 11 12 13
    BREAK (276) 11 12 13
    DEFAULT (277) 13


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    S1 (37)
        on left: 1 2
        on right: 0 1 11 12 13 23 30 31 32 33
    S (38)
        on left: 3 4 5 6 7 8 9
        on right: 1 2
    SS (39)
        on left: 10
        on right: 9
    CV (40)
        on left: 11 12 13
        on right: 10 12
    AS (41)
        on left: 14
        on right: 3 34 35
    E (42)
        on left: 15 16 17 18 19 20 21 22
        on right: 10 11 12 13 14 15 16 17 18 19 20
    IFS (43)
        on left: 23
        on right: 4
    BE (44)
        on left: 24 25 26 27 28 29
        on right: 23 24 25 26 30 31 32 33
    IFES (45)
        on left: 30
        on right: 5
    WS (46)
        on left: 31
        on right: 6
    DWS (47)
        on left: 32
        on right: 7
    FORS (48)
        on left: 33
        on right: 8
    IS (49)
        on left: 34 35
        on right: 33 35 36
    MS (50)
        on left: 36 37 38 39 40
        on right: 33


State 0

    0 $accept: . S1 $end

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    S1    go to state 7
    S     go to state 8
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 1

   14 AS: id . '=' E

    '='  shift, and go to state 16


State 2

   23 IFS: IF . '(' BE ')' '{' S1 '}'
   30 IFES: IF . '(' BE ')' '{' S1 '}' ELSE '{' S1 '}'

    '('  shift, and go to state 17


State 3

   32 DWS: DO . '{' S1 '}' WHILE '(' BE ')' ';'

    '{'  shift, and go to state 18


State 4

   31 WS: WHILE . '(' BE ')' '{' S1 '}'

    '('  shift, and go to state 19


State 5

   33 FORS: FOR . '(' IS ';' BE ';' MS ')' '{' S1 '}'

    '('  shift, and go to state 20


State 6

   10 SS: SWITCH . '(' E ')' '{' CV '}'

    '('  shift, and go to state 21


State 7

    0 $accept: S1 . $end
    1 S1: S1 . S

    $end    shift, and go to state 22
    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    S     go to state 23
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 8

    2 S1: S .

    $default  reduce using rule 2 (S1)


State 9

    9 S: SS .

    $default  reduce using rule 9 (S)


State 10

    3 S: AS . ';'

    ';'  shift, and go to state 24


State 11

    4 S: IFS .

    $default  reduce using rule 4 (S)


State 12

    5 S: IFES .

    $default  reduce using rule 5 (S)


State 13

    6 S: WS .

    $default  reduce using rule 6 (S)


State 14

    7 S: DWS .

    $default  reduce using rule 7 (S)


State 15

    8 S: FORS .

    $default  reduce using rule 8 (S)


State 16

   14 AS: id '=' . E

    id   shift, and go to state 25
    NUM  shift, and go to state 26
    '-'  shift, and go to state 27

    E  go to state 28


State 17

   23 IFS: IF '(' . BE ')' '{' S1 '}'
   30 IFES: IF '(' . BE ')' '{' S1 '}' ELSE '{' S1 '}'

    id     shift, and go to state 29
    NOT    shift, and go to state 30
    TRUE   shift, and go to state 31
    FALSE  shift, and go to state 32

    BE  go to state 33


State 18

   32 DWS: DO '{' . S1 '}' WHILE '(' BE ')' ';'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    S1    go to state 34
    S     go to state 8
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 19

   31 WS: WHILE '(' . BE ')' '{' S1 '}'

    id     shift, and go to state 29
    NOT    shift, and go to state 30
    TRUE   shift, and go to state 31
    FALSE  shift, and go to state 32

    BE  go to state 35


State 20

   33 FORS: FOR '(' . IS ';' BE ';' MS ')' '{' S1 '}'

    id  shift, and go to state 1

    AS  go to state 36
    IS  go to state 37


State 21

   10 SS: SWITCH '(' . E ')' '{' CV '}'

    id   shift, and go to state 25
    NUM  shift, and go to state 26
    '-'  shift, and go to state 27

    E  go to state 38


State 22

    0 $accept: S1 $end .

    $default  accept


State 23

    1 S1: S1 S .

    $default  reduce using rule 1 (S1)


State 24

    3 S: AS ';' .

    $default  reduce using rule 3 (S)


State 25

   21 E: id .

    $default  reduce using rule 21 (E)


State 26

   22 E: NUM .

    $default  reduce using rule 22 (E)


State 27

   20 E: '-' . E

    id   shift, and go to state 25
    NUM  shift, and go to state 26
    '-'  shift, and go to state 27

    E  go to state 39


State 28

   14 AS: id '=' E .
   15 E: E . '+' E
   16  | E . '-' E
   17  | E . '*' E
   18  | E . '/' E
   19  | E . '^' E

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '^'  shift, and go to state 44

    $default  reduce using rule 14 (AS)


State 29

   27 BE: id . relop id

    relop  shift, and go to state 45


State 30

   26 BE: NOT . BE

    id     shift, and go to state 29
    NOT    shift, and go to state 30
    TRUE   shift, and go to state 31
    FALSE  shift, and go to state 32

    BE  go to state 46


State 31

   28 BE: TRUE .

    $default  reduce using rule 28 (BE)


State 32

   29 BE: FALSE .

    $default  reduce using rule 29 (BE)


State 33

   23 IFS: IF '(' BE . ')' '{' S1 '}'
   24 BE: BE . OR BE
   25   | BE . AND BE
   30 IFES: IF '(' BE . ')' '{' S1 '}' ELSE '{' S1 '}'

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    ')'  shift, and go to state 49


State 34

    1 S1: S1 . S
   32 DWS: DO '{' S1 . '}' WHILE '(' BE ')' ';'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6
    '}'     shift, and go to state 50

    S     go to state 23
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 35

   24 BE: BE . OR BE
   25   | BE . AND BE
   31 WS: WHILE '(' BE . ')' '{' S1 '}'

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    ')'  shift, and go to state 51


State 36

   34 IS: AS .

    $default  reduce using rule 34 (IS)


State 37

   33 FORS: FOR '(' IS . ';' BE ';' MS ')' '{' S1 '}'
   35 IS: IS . ',' AS

    ';'  shift, and go to state 52
    ','  shift, and go to state 53


State 38

   10 SS: SWITCH '(' E . ')' '{' CV '}'
   15 E: E . '+' E
   16  | E . '-' E
   17  | E . '*' E
   18  | E . '/' E
   19  | E . '^' E

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '^'  shift, and go to state 44
    ')'  shift, and go to state 54


State 39

   15 E: E . '+' E
   16  | E . '-' E
   17  | E . '*' E
   18  | E . '/' E
   19  | E . '^' E
   20  | '-' E .

    $default  reduce using rule 20 (E)


State 40

   15 E: E '+' . E

    id   shift, and go to state 25
    NUM  shift, and go to state 26
    '-'  shift, and go to state 27

    E  go to state 55


State 41

   16 E: E '-' . E

    id   shift, and go to state 25
    NUM  shift, and go to state 26
    '-'  shift, and go to state 27

    E  go to state 56


State 42

   17 E: E '*' . E

    id   shift, and go to state 25
    NUM  shift, and go to state 26
    '-'  shift, and go to state 27

    E  go to state 57


State 43

   18 E: E '/' . E

    id   shift, and go to state 25
    NUM  shift, and go to state 26
    '-'  shift, and go to state 27

    E  go to state 58


State 44

   19 E: E '^' . E

    id   shift, and go to state 25
    NUM  shift, and go to state 26
    '-'  shift, and go to state 27

    E  go to state 59


State 45

   27 BE: id relop . id

    id  shift, and go to state 60


State 46

   24 BE: BE . OR BE
   25   | BE . AND BE
   26   | NOT BE .

    $default  reduce using rule 26 (BE)


State 47

   24 BE: BE OR . BE

    id     shift, and go to state 29
    NOT    shift, and go to state 30
    TRUE   shift, and go to state 31
    FALSE  shift, and go to state 32

    BE  go to state 61


State 48

   25 BE: BE AND . BE

    id     shift, and go to state 29
    NOT    shift, and go to state 30
    TRUE   shift, and go to state 31
    FALSE  shift, and go to state 32

    BE  go to state 62


State 49

   23 IFS: IF '(' BE ')' . '{' S1 '}'
   30 IFES: IF '(' BE ')' . '{' S1 '}' ELSE '{' S1 '}'

    '{'  shift, and go to state 63


State 50

   32 DWS: DO '{' S1 '}' . WHILE '(' BE ')' ';'

    WHILE  shift, and go to state 64


State 51

   31 WS: WHILE '(' BE ')' . '{' S1 '}'

    '{'  shift, and go to state 65


State 52

   33 FORS: FOR '(' IS ';' . BE ';' MS ')' '{' S1 '}'

    id     shift, and go to state 29
    NOT    shift, and go to state 30
    TRUE   shift, and go to state 31
    FALSE  shift, and go to state 32

    BE  go to state 66


State 53

   35 IS: IS ',' . AS

    id  shift, and go to state 1

    AS  go to state 67


State 54

   10 SS: SWITCH '(' E ')' . '{' CV '}'

    '{'  shift, and go to state 68


State 55

   15 E: E . '+' E
   15  | E '+' E .
   16  | E . '-' E
   17  | E . '*' E
   18  | E . '/' E
   19  | E . '^' E

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '^'  shift, and go to state 44

    $default  reduce using rule 15 (E)


State 56

   15 E: E . '+' E
   16  | E . '-' E
   16  | E '-' E .
   17  | E . '*' E
   18  | E . '/' E
   19  | E . '^' E

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '^'  shift, and go to state 44

    $default  reduce using rule 16 (E)


State 57

   15 E: E . '+' E
   16  | E . '-' E
   17  | E . '*' E
   17  | E '*' E .
   18  | E . '/' E
   19  | E . '^' E

    '^'  shift, and go to state 44

    $default  reduce using rule 17 (E)


State 58

   15 E: E . '+' E
   16  | E . '-' E
   17  | E . '*' E
   18  | E . '/' E
   18  | E '/' E .
   19  | E . '^' E

    '^'  shift, and go to state 44

    $default  reduce using rule 18 (E)


State 59

   15 E: E . '+' E
   16  | E . '-' E
   17  | E . '*' E
   18  | E . '/' E
   19  | E . '^' E
   19  | E '^' E .

    '^'  shift, and go to state 44

    $default  reduce using rule 19 (E)


State 60

   27 BE: id relop id .

    $default  reduce using rule 27 (BE)


State 61

   24 BE: BE . OR BE
   24   | BE OR BE .
   25   | BE . AND BE

    AND  shift, and go to state 48

    $default  reduce using rule 24 (BE)


State 62

   24 BE: BE . OR BE
   25   | BE . AND BE
   25   | BE AND BE .

    $default  reduce using rule 25 (BE)


State 63

   23 IFS: IF '(' BE ')' '{' . S1 '}'
   30 IFES: IF '(' BE ')' '{' . S1 '}' ELSE '{' S1 '}'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    S1    go to state 69
    S     go to state 8
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 64

   32 DWS: DO '{' S1 '}' WHILE . '(' BE ')' ';'

    '('  shift, and go to state 70


State 65

   31 WS: WHILE '(' BE ')' '{' . S1 '}'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    S1    go to state 71
    S     go to state 8
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 66

   24 BE: BE . OR BE
   25   | BE . AND BE
   33 FORS: FOR '(' IS ';' BE . ';' MS ')' '{' S1 '}'

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    ';'  shift, and go to state 72


State 67

   35 IS: IS ',' AS .

    $default  reduce using rule 35 (IS)


State 68

   10 SS: SWITCH '(' E ')' '{' . CV '}'

    CASE  shift, and go to state 73

    CV  go to state 74


State 69

    1 S1: S1 . S
   23 IFS: IF '(' BE ')' '{' S1 . '}'
   30 IFES: IF '(' BE ')' '{' S1 . '}' ELSE '{' S1 '}'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6
    '}'     shift, and go to state 75

    S     go to state 23
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 70

   32 DWS: DO '{' S1 '}' WHILE '(' . BE ')' ';'

    id     shift, and go to state 29
    NOT    shift, and go to state 30
    TRUE   shift, and go to state 31
    FALSE  shift, and go to state 32

    BE  go to state 76


State 71

    1 S1: S1 . S
   31 WS: WHILE '(' BE ')' '{' S1 . '}'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6
    '}'     shift, and go to state 77

    S     go to state 23
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 72

   33 FORS: FOR '(' IS ';' BE ';' . MS ')' '{' S1 '}'

    id   shift, and go to state 78
    INC  shift, and go to state 79
    DEC  shift, and go to state 80

    AS  go to state 36
    IS  go to state 81
    MS  go to state 82


State 73

   11 CV: CASE . E ':' S1 BREAK ';'
   12   | CASE . E ':' S1 BREAK ';' CV
   13   | CASE . E ':' S1 BREAK ';' DEFAULT ':' S1

    id   shift, and go to state 25
    NUM  shift, and go to state 26
    '-'  shift, and go to state 27

    E  go to state 83


State 74

   10 SS: SWITCH '(' E ')' '{' CV . '}'

    '}'  shift, and go to state 84


State 75

   23 IFS: IF '(' BE ')' '{' S1 '}' .
   30 IFES: IF '(' BE ')' '{' S1 '}' . ELSE '{' S1 '}'

    ELSE  shift, and go to state 85

    $default  reduce using rule 23 (IFS)


State 76

   24 BE: BE . OR BE
   25   | BE . AND BE
   32 DWS: DO '{' S1 '}' WHILE '(' BE . ')' ';'

    OR   shift, and go to state 47
    AND  shift, and go to state 48
    ')'  shift, and go to state 86


State 77

   31 WS: WHILE '(' BE ')' '{' S1 '}' .

    $default  reduce using rule 31 (WS)


State 78

   14 AS: id . '=' E
   37 MS: id . INC
   39   | id . DEC

    INC  shift, and go to state 87
    DEC  shift, and go to state 88
    '='  shift, and go to state 16


State 79

   38 MS: INC . id

    id  shift, and go to state 89


State 80

   40 MS: DEC . id

    id  shift, and go to state 90


State 81

   35 IS: IS . ',' AS
   36 MS: IS .

    ','  shift, and go to state 53

    $default  reduce using rule 36 (MS)


State 82

   33 FORS: FOR '(' IS ';' BE ';' MS . ')' '{' S1 '}'

    ')'  shift, and go to state 91


State 83

   11 CV: CASE E . ':' S1 BREAK ';'
   12   | CASE E . ':' S1 BREAK ';' CV
   13   | CASE E . ':' S1 BREAK ';' DEFAULT ':' S1
   15 E: E . '+' E
   16  | E . '-' E
   17  | E . '*' E
   18  | E . '/' E
   19  | E . '^' E

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    '^'  shift, and go to state 44
    ':'  shift, and go to state 92


State 84

   10 SS: SWITCH '(' E ')' '{' CV '}' .

    $default  reduce using rule 10 (SS)


State 85

   30 IFES: IF '(' BE ')' '{' S1 '}' ELSE . '{' S1 '}'

    '{'  shift, and go to state 93


State 86

   32 DWS: DO '{' S1 '}' WHILE '(' BE ')' . ';'

    ';'  shift, and go to state 94


State 87

   37 MS: id INC .

    $default  reduce using rule 37 (MS)


State 88

   39 MS: id DEC .

    $default  reduce using rule 39 (MS)


State 89

   38 MS: INC id .

    $default  reduce using rule 38 (MS)


State 90

   40 MS: DEC id .

    $default  reduce using rule 40 (MS)


State 91

   33 FORS: FOR '(' IS ';' BE ';' MS ')' . '{' S1 '}'

    '{'  shift, and go to state 95


State 92

   11 CV: CASE E ':' . S1 BREAK ';'
   12   | CASE E ':' . S1 BREAK ';' CV
   13   | CASE E ':' . S1 BREAK ';' DEFAULT ':' S1

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    S1    go to state 96
    S     go to state 8
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 93

   30 IFES: IF '(' BE ')' '{' S1 '}' ELSE '{' . S1 '}'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    S1    go to state 97
    S     go to state 8
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 94

   32 DWS: DO '{' S1 '}' WHILE '(' BE ')' ';' .

    $default  reduce using rule 32 (DWS)


State 95

   33 FORS: FOR '(' IS ';' BE ';' MS ')' '{' . S1 '}'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    S1    go to state 98
    S     go to state 8
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 96

    1 S1: S1 . S
   11 CV: CASE E ':' S1 . BREAK ';'
   12   | CASE E ':' S1 . BREAK ';' CV
   13   | CASE E ':' S1 . BREAK ';' DEFAULT ':' S1

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6
    BREAK   shift, and go to state 99

    S     go to state 23
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 97

    1 S1: S1 . S
   30 IFES: IF '(' BE ')' '{' S1 '}' ELSE '{' S1 . '}'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6
    '}'     shift, and go to state 100

    S     go to state 23
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 98

    1 S1: S1 . S
   33 FORS: FOR '(' IS ';' BE ';' MS ')' '{' S1 . '}'

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6
    '}'     shift, and go to state 101

    S     go to state 23
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 99

   11 CV: CASE E ':' S1 BREAK . ';'
   12   | CASE E ':' S1 BREAK . ';' CV
   13   | CASE E ':' S1 BREAK . ';' DEFAULT ':' S1

    ';'  shift, and go to state 102


State 100

   30 IFES: IF '(' BE ')' '{' S1 '}' ELSE '{' S1 '}' .

    $default  reduce using rule 30 (IFES)


State 101

   33 FORS: FOR '(' IS ';' BE ';' MS ')' '{' S1 '}' .

    $default  reduce using rule 33 (FORS)


State 102

   11 CV: CASE E ':' S1 BREAK ';' .
   12   | CASE E ':' S1 BREAK ';' . CV
   13   | CASE E ':' S1 BREAK ';' . DEFAULT ':' S1

    CASE     shift, and go to state 73
    DEFAULT  shift, and go to state 103

    $default  reduce using rule 11 (CV)

    CV  go to state 104


State 103

   13 CV: CASE E ':' S1 BREAK ';' DEFAULT . ':' S1

    ':'  shift, and go to state 105


State 104

   12 CV: CASE E ':' S1 BREAK ';' CV .

    $default  reduce using rule 12 (CV)


State 105

   13 CV: CASE E ':' S1 BREAK ';' DEFAULT ':' . S1

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    S1    go to state 106
    S     go to state 8
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15


State 106

    1 S1: S1 . S
   13 CV: CASE E ':' S1 BREAK ';' DEFAULT ':' S1 .

    id      shift, and go to state 1
    IF      shift, and go to state 2
    DO      shift, and go to state 3
    WHILE   shift, and go to state 4
    FOR     shift, and go to state 5
    SWITCH  shift, and go to state 6

    $default  reduce using rule 13 (CV)

    S     go to state 23
    SS    go to state 9
    AS    go to state 10
    IFS   go to state 11
    IFES  go to state 12
    WS    go to state 13
    DWS   go to state 14
    FORS  go to state 15
